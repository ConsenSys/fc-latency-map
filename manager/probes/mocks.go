// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ConsenSys/fc-latency-map/manager/probes (interfaces: ProbeService)

// Package probes is a generated GoMock package.
package probes

import (
	reflect "reflect"

	models "github.com/ConsenSys/fc-latency-map/manager/models"
	gomock "github.com/golang/mock/gomock"
)

// MockProbeService is a mock of ProbeService interface.
type MockProbeService struct {
	ctrl     *gomock.Controller
	recorder *MockProbeServiceMockRecorder
}

// MockProbeServiceMockRecorder is the mock recorder for MockProbeService.
type MockProbeServiceMockRecorder struct {
	mock *MockProbeService
}

// NewMockProbeService creates a new mock instance.
func NewMockProbeService(ctrl *gomock.Controller) *MockProbeService {
	mock := &MockProbeService{ctrl: ctrl}
	mock.recorder = &MockProbeServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProbeService) EXPECT() *MockProbeServiceMockRecorder {
	return m.recorder
}

// GetTotalProbes mocks base method.
func (m *MockProbeService) GetTotalProbes() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalProbes")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetTotalProbes indicates an expected call of GetTotalProbes.
func (mr *MockProbeServiceMockRecorder) GetTotalProbes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalProbes", reflect.TypeOf((*MockProbeService)(nil).GetTotalProbes))
}

// ImportProbes mocks base method.
func (m *MockProbeService) ImportProbes() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ImportProbes")
}

// ImportProbes indicates an expected call of ImportProbes.
func (mr *MockProbeServiceMockRecorder) ImportProbes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImportProbes", reflect.TypeOf((*MockProbeService)(nil).ImportProbes))
}

// ListProbes mocks base method.
func (m *MockProbeService) ListProbes() []*models.Probe {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListProbes")
	ret0, _ := ret[0].([]*models.Probe)
	return ret0
}

// ListProbes indicates an expected call of ListProbes.
func (mr *MockProbeServiceMockRecorder) ListProbes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListProbes", reflect.TypeOf((*MockProbeService)(nil).ListProbes))
}

// RequestProbes mocks base method.
func (m *MockProbeService) RequestProbes() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestProbes")
	ret0, _ := ret[0].(error)
	return ret0
}

// RequestProbes indicates an expected call of RequestProbes.
func (mr *MockProbeServiceMockRecorder) RequestProbes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestProbes", reflect.TypeOf((*MockProbeService)(nil).RequestProbes))
}

// Update mocks base method.
func (m *MockProbeService) Update() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Update")
}

// Update indicates an expected call of Update.
func (mr *MockProbeServiceMockRecorder) Update() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockProbeService)(nil).Update))
}
