// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ConsenSys/fc-latency-map/manager/miners (interfaces: MinerService)

// Package miners is a generated GoMock package.
package miners

import (
	reflect "reflect"

	models "github.com/ConsenSys/fc-latency-map/manager/models"
	gomock "github.com/golang/mock/gomock"
)

// MockMinerService is a mock of MinerService interface.
type MockMinerService struct {
	ctrl     *gomock.Controller
	recorder *MockMinerServiceMockRecorder
}

// MockMinerServiceMockRecorder is the mock recorder for MockMinerService.
type MockMinerServiceMockRecorder struct {
	mock *MockMinerService
}

// NewMockMinerService creates a new mock instance.
func NewMockMinerService(ctrl *gomock.Controller) *MockMinerService {
	mock := &MockMinerService{ctrl: ctrl}
	mock.recorder = &MockMinerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMinerService) EXPECT() *MockMinerServiceMockRecorder {
	return m.recorder
}

// GetAllMiners mocks base method.
func (m *MockMinerService) GetAllMiners() []*models.Miner {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllMiners")
	ret0, _ := ret[0].([]*models.Miner)
	return ret0
}

// GetAllMiners indicates an expected call of GetAllMiners.
func (mr *MockMinerServiceMockRecorder) GetAllMiners() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllMiners", reflect.TypeOf((*MockMinerService)(nil).GetAllMiners))
}

// ParseMiners mocks base method.
func (m *MockMinerService) ParseMiners(arg0 uint) []*models.Miner {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseMiners", arg0)
	ret0, _ := ret[0].([]*models.Miner)
	return ret0
}

// ParseMiners indicates an expected call of ParseMiners.
func (mr *MockMinerServiceMockRecorder) ParseMiners(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseMiners", reflect.TypeOf((*MockMinerService)(nil).ParseMiners), arg0)
}

// ParseMinersByBlockHeight mocks base method.
func (m *MockMinerService) ParseMinersByBlockHeight(arg0 int64) []*models.Miner {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseMinersByBlockHeight", arg0)
	ret0, _ := ret[0].([]*models.Miner)
	return ret0
}

// ParseMinersByBlockHeight indicates an expected call of ParseMinersByBlockHeight.
func (mr *MockMinerServiceMockRecorder) ParseMinersByBlockHeight(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseMinersByBlockHeight", reflect.TypeOf((*MockMinerService)(nil).ParseMinersByBlockHeight), arg0)
}
