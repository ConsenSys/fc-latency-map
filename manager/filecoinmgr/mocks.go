// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ConsenSys/fc-latency-map/manager/filecoinmgr (interfaces: FilecoinMgr)

// Package filecoinmgr is a generated GoMock package.
package filecoinmgr

import (
	reflect "reflect"

	go_address "github.com/filecoin-project/go-address"
	abi "github.com/filecoin-project/go-state-types/abi"
	miner "github.com/filecoin-project/lotus/chain/actors/builtin/miner"
	types "github.com/filecoin-project/lotus/chain/types"
	gomock "github.com/golang/mock/gomock"
)

// MockFilecoinMgr is a mock of FilecoinMgr interface.
type MockFilecoinMgr struct {
	ctrl     *gomock.Controller
	recorder *MockFilecoinMgrMockRecorder
}

// MockFilecoinMgrMockRecorder is the mock recorder for MockFilecoinMgr.
type MockFilecoinMgrMockRecorder struct {
	mock *MockFilecoinMgr
}

// NewMockFilecoinMgr creates a new mock instance.
func NewMockFilecoinMgr(ctrl *gomock.Controller) *MockFilecoinMgr {
	mock := &MockFilecoinMgr{ctrl: ctrl}
	mock.recorder = &MockFilecoinMgrMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFilecoinMgr) EXPECT() *MockFilecoinMgrMockRecorder {
	return m.recorder
}

// GetBlockHeight mocks base method.
func (m *MockFilecoinMgr) GetBlockHeight() (abi.ChainEpoch, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlockHeight")
	ret0, _ := ret[0].(abi.ChainEpoch)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlockHeight indicates an expected call of GetBlockHeight.
func (mr *MockFilecoinMgrMockRecorder) GetBlockHeight() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockHeight", reflect.TypeOf((*MockFilecoinMgr)(nil).GetBlockHeight))
}

// GetChainHead mocks base method.
func (m *MockFilecoinMgr) GetChainHead() (*types.TipSet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChainHead")
	ret0, _ := ret[0].(*types.TipSet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChainHead indicates an expected call of GetChainHead.
func (mr *MockFilecoinMgrMockRecorder) GetChainHead() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChainHead", reflect.TypeOf((*MockFilecoinMgr)(nil).GetChainHead))
}

// GetMinerInfo mocks base method.
func (m *MockFilecoinMgr) GetMinerInfo(arg0 go_address.Address) (miner.MinerInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMinerInfo", arg0)
	ret0, _ := ret[0].(miner.MinerInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMinerInfo indicates an expected call of GetMinerInfo.
func (mr *MockFilecoinMgrMockRecorder) GetMinerInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMinerInfo", reflect.TypeOf((*MockFilecoinMgr)(nil).GetMinerInfo), arg0)
}

// GetVerifiedDealsByBlockHeight mocks base method.
func (m *MockFilecoinMgr) GetVerifiedDealsByBlockHeight(arg0 abi.ChainEpoch) ([]VerifiedDeal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVerifiedDealsByBlockHeight", arg0)
	ret0, _ := ret[0].([]VerifiedDeal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVerifiedDealsByBlockHeight indicates an expected call of GetVerifiedDealsByBlockHeight.
func (mr *MockFilecoinMgrMockRecorder) GetVerifiedDealsByBlockHeight(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVerifiedDealsByBlockHeight", reflect.TypeOf((*MockFilecoinMgr)(nil).GetVerifiedDealsByBlockHeight), arg0)
}

// GetVerifiedDealsByBlockRange mocks base method.
func (m *MockFilecoinMgr) GetVerifiedDealsByBlockRange(arg0 abi.ChainEpoch, arg1 uint) ([]VerifiedDeal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVerifiedDealsByBlockRange", arg0, arg1)
	ret0, _ := ret[0].([]VerifiedDeal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVerifiedDealsByBlockRange indicates an expected call of GetVerifiedDealsByBlockRange.
func (mr *MockFilecoinMgrMockRecorder) GetVerifiedDealsByBlockRange(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVerifiedDealsByBlockRange", reflect.TypeOf((*MockFilecoinMgr)(nil).GetVerifiedDealsByBlockRange), arg0, arg1)
}
