// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ConsenSys/fc-latency-map/manager/db (interfaces: DatabaseMgr)

// Package db is a generated GoMock package.
package db

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gorm "gorm.io/gorm"
)

// MockDatabaseMgr is a mock of DatabaseMgr interface.
type MockDatabaseMgr struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseMgrMockRecorder
}

// MockDatabaseMgrMockRecorder is the mock recorder for MockDatabaseMgr.
type MockDatabaseMgrMockRecorder struct {
	mock *MockDatabaseMgr
}

// NewMockDatabaseMgr creates a new mock instance.
func NewMockDatabaseMgr(ctrl *gomock.Controller) *MockDatabaseMgr {
	mock := &MockDatabaseMgr{ctrl: ctrl}
	mock.recorder = &MockDatabaseMgrMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatabaseMgr) EXPECT() *MockDatabaseMgrMockRecorder {
	return m.recorder
}

// GetDB mocks base method.
func (m *MockDatabaseMgr) GetDB() *gorm.DB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDB")
	ret0, _ := ret[0].(*gorm.DB)
	return ret0
}

// GetDB indicates an expected call of GetDB.
func (mr *MockDatabaseMgrMockRecorder) GetDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDB", reflect.TypeOf((*MockDatabaseMgr)(nil).GetDB))
}
